@use '@/styles/blog/palette' as palette;
@use '@/styles/blog/value' as value;
@use '@/styles/blog/skeleton' as skeleton;

.container {
  display: flex;
  align-items: center;
  flex-direction: column;

  width: 100%;
}

.content-container {
  & {
    @include value.fixed-width-container-styles;

    line-height: value.$reading-line-spacing;

    font-size: 1.1rem;
  }

  // @todo organize these classes.. omg

  // Headings
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @extend %headings !optional;

    position: relative;

    margin-top: calc(value.$content-gap * 2.5);
    margin-bottom: value.$content-gap;

    @media screen and (min-width: value.$small-screen-width) {
      &::before {
        content: '#';

        position: absolute;
        left: 0;
        transform: translateX(calc(-100% - value.$content-gap));

        color: palette.$dark-beige;
      }
    }
  }

  // Element margins
  p,
  img,
  hr,
  ul,
  ol,
  :not(pre) > code,
  pre {
    margin: value.$content-gap 0;
  }

  // Separator
  hr {
    color: palette.$dark-3-beige;
  }

  // Syntax highlighting
  code {
    font-size: 0.9rem;
    letter-spacing: normal;
  }

  :not(pre) > code,
  pre {
    border: solid value.$border-slim-width palette.$border-color;
  }

  :not(pre) > code {
    padding: 5px 8px;

    background-color: palette.$code-background-color;
    color: palette.$code-text-color;
  }

  pre {
    padding: value.$content-gap 0;
    padding: (value.$content-gap + 5px);

    overflow-x: auto;

    // Shiki highlighter
    &:global(.shiki) {
      @include palette.shiki-theme();

      display: flex;
      flex-direction: column;
    }

    code span:global(.line),
    code:not(:has(span)) {
      display: inline-block;
      width: 100%;

      &:global(.highlighted) {
        background-color: palette.$dark-3-beige;
      }
    }
  }

  // Blockquote
}
