@use '@/styles/mixin' as mixin;
@use '@/styles/value' as value;
@use '@/styles/palette' as palette;

$distance-from-edge: value.$content-padding;

.container {
  position: fixed;
  bottom: $distance-from-edge;
  right: $distance-from-edge;
  z-index: 10;

  display: flex;
  justify-content: center;
  align-items: center;

  border-radius: 100%;

  color: palette.$text-color;

  width: 40px;
  height: 40px;

  @include mixin.pointer-feedback-animation;
}

$border-width: 4px;

.progress-border {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;

  width: 100%;
  height: 100%;

  border-radius: inherit;

  background-color: palette.$light-gray;

  > circle {
    fill: none;

    stroke: currentColor;
  }
}

.button-container {
  color: currentColor;

  width: calc(100% - $border-width);
  height: calc(100% - $border-width);

  border-radius: inherit;
}

.button {
  display: flex;
  justify-content: center;
  align-items: center;

  width: 100%;
  height: 100%;

  @include mixin.button-styles(
    $background-color: transparent,
    $text-color: currentColor,
    $border-radius: inherit
  );

  .border-visible & {
    @include mixin.button-styles(
      $background-color: palette.$white,
      $text-color: currentColor,
      $border-radius: inherit
    );
  }

  > svg {
    overflow: visible;

    stroke: currentColor;
    stroke-width: 12;

    fill: none;

    width: 40%;
    height: 40%;
  }
}
